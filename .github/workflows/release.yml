name: Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The Cassandra cachestore branch to checkout when cutting the release."
        required: true
        default: "main"
      currentVersion:
        description: "Current development version to check against."
        required: true
        default: "X.Y.Z-SNAPSHOT"
      releaseVersion:
        description: "Release version."
        required: true
        default: "X.Y.Z"
      developmentVersion:
        description: "Next development version."
        required: true
        default: "X.Y.Z-SNAPSHOT"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set release version
        run: sed -i 's/<version>${{ github.event.inputs.currentVersion }}<\/version>/<version>${{ github.event.inputs.releaseVersion }}<\/version>/g' pom.xml

      - name: Set up Java for publishing to OSSRH
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.INFINISPAN_MAVEN_GPG_ARMORED }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Publish to OSSRH
        run: mvn -B clean deploy -Pcommunity-release -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.INFINISPAN_MAVEN_GPG_PASSPHRASE }}

      - name: Configure Git User
        run: |
          git config user.email "infinispan@infinispan.org"
          git config user.name "Infinispan"

      - name: Tag Release
          run: |
            git commit -a -m "Releasing ${{ github.event.inputs.releaseVersion }}"
            git tag ${{ github.event.inputs.releaseVersion }}

      - name: Next Version
          run: |
            sed -i 's/<version>${{ github.event.inputs.releaseVersion }}<\/version>/<version>${{ github.event.inputs.developmentVersion }}<\/version>/g' pom.xml
            git commit -a -m "Next version ${{ github.event.inputs.nextVersion }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.inputs.branch }}
          tags: true

      - id: release
        name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.releaseVersion }}
          release_name: ${{ github.event.inputs.releaseVersion }}
